{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// List of supported routes. Any url other than these routes will throw a 404 error\nvar routes = {\n  '/': Home,\n  '/interviews/new': New,\n  '/register': Register\n};\n\nvar router = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var content, request, parsedURL, page;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            content = null || document.getElementById('page_container');\n            request = Utils.parseRequestURL();\n            parsedURL = (request.resource ? '/' + request.resource : '/') + (request.id ? '/:id' : '') + (request.verb ? '/' + request.verb : '');\n            page = routes[parsedURL] ? routes[parsedURL] : Error404;\n            _context.next = 6;\n            return page.render();\n\n          case 6:\n            content.innerHTML = _context.sent;\n            _context.next = 9;\n            return page.after_render();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function router() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nwindow.addEventListener('hashchange', router);\nwindow.addEventListener('load', router);","map":{"version":3,"sources":["/home/yatharths/Desktop/Projects/InterviewNow/app/javascript/packs/app.js"],"names":["routes","Home","New","Register","router","content","document","getElementById","request","Utils","parseRequestURL","parsedURL","resource","id","verb","page","Error404","render","innerHTML","after_render","window","addEventListener"],"mappings":";;;;;;AAAA;AACA,IAAMA,MAAM,GAAG;AACX,OAAqBC,IADV;AAET,qBAA0BC,GAFjB;AAGT,eAAgBC;AAHP,CAAf;;AAMA,IAAMC,MAAM;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,YAAAA,OAFK,GAEK,QAAQC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAFb;AAIPC,YAAAA,OAJO,GAIGC,KAAK,CAACC,eAAN,EAJH;AAKPC,YAAAA,SALO,GAKK,CAACH,OAAO,CAACI,QAAR,GAAmB,MAAMJ,OAAO,CAACI,QAAjC,GAA4C,GAA7C,KAAqDJ,OAAO,CAACK,EAAR,GAAa,MAAb,GAAsB,EAA3E,KAAkFL,OAAO,CAACM,IAAR,GAAe,MAAMN,OAAO,CAACM,IAA7B,GAAoC,EAAtH,CALL;AAOPC,YAAAA,IAPO,GAOAf,MAAM,CAACW,SAAD,CAAN,GAAoBX,MAAM,CAACW,SAAD,CAA1B,GAAwCK,QAPxC;AAAA;AAAA,mBAQeD,IAAI,CAACE,MAAL,EARf;;AAAA;AAQXZ,YAAAA,OAAO,CAACa,SARG;AAAA;AAAA,mBASLH,IAAI,CAACI,YAAL,EATK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANf,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAaAgB,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsCjB,MAAtC;AAEAgB,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCjB,MAAhC","sourcesContent":["// List of supported routes. Any url other than these routes will throw a 404 error\nconst routes = {\n    '/'             \t\t\t: Home\n    , '/interviews/new'      \t: New\n    , '/register'   : Register\n};\n\nconst router = async () => {\n\n    const content = null || document.getElementById('page_container');\n\n    let request = Utils.parseRequestURL()\n    let parsedURL = (request.resource ? '/' + request.resource : '/') + (request.id ? '/:id' : '') + (request.verb ? '/' + request.verb : '')\n\n    let page = routes[parsedURL] ? routes[parsedURL] : Error404\n    content.innerHTML = await page.render();\n    await page.after_render();\n\n}\n\nwindow.addEventListener('hashchange', router);\n\nwindow.addEventListener('load', router);\n"]},"metadata":{},"sourceType":"module"}