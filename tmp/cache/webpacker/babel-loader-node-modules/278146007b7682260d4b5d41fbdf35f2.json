{"ast":null,"code":"'use strict';\n\nfunction Router(routes) {\n  try {\n    if (!routes) {\n      throw 'error: routes param is mandatory';\n    }\n\n    this.constructor(routes);\n    this.init();\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nRouter.prototype = {\n  routes: undefined,\n  rootElem: undefined,\n  constructor: function constructor(routes) {\n    this.routes = routes;\n    this.rootElem = document.getElementById('app');\n  },\n  init: function init() {\n    var r = this.routes;\n\n    (function (scope, r) {\n      window.addEventListener('hashchange', function (e) {\n        scope.hasChanged(scope, r);\n      });\n    })(this, r);\n\n    this.hasChanged(this, r);\n  },\n  hasChanged: function hasChanged(scope, r) {\n    if (window.location.hash.length > 0) {\n      for (var i = 0, length = r.length; i < length; i++) {\n        var route = r[i];\n\n        if (route.isActiveRoute(window.location.hash.substr(1))) {\n          scope.goToRoute(route.htmlName);\n        }\n      }\n    } else {\n      for (var i = 0, length = r.length; i < length; i++) {\n        var route = r[i];\n\n        if (route[\"default\"]) {\n          scope.goToRoute(route.htmlName);\n        }\n      }\n    }\n  },\n  goToRoute: function goToRoute(htmlName) {\n    (function (scope) {\n      // console.log(\"funtion is called -----------------------------------\")\n      var url = 'http://127.0.0.1:3000/',\n          xhttp = new XMLHttpRequest();\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          scope.rootElem.innerHTML = this.responseText;\n        }\n      };\n\n      xhttp.open('GET', url, true);\n      xhttp.send();\n    })(this);\n  }\n};","map":{"version":3,"sources":["/home/yatharths/Desktop/Projects/InterviewNow/app/javascript/packs/js/router.js"],"names":["Router","routes","constructor","init","e","console","error","prototype","undefined","rootElem","document","getElementById","r","scope","window","addEventListener","hasChanged","location","hash","length","i","route","isActiveRoute","substr","goToRoute","htmlName","url","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","innerHTML","responseText","open","send"],"mappings":"AACA;;AAEA,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA,QAAI,CAACA,MAAL,EAAa;AACT,YAAM,kCAAN;AACH;;AACD,SAAKC,WAAL,CAAiBD,MAAjB;AACA,SAAKE,IAAL;AACH,GAND,CAME,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ;;AAEDJ,MAAM,CAACO,SAAP,GAAmB;AACfN,EAAAA,MAAM,EAAEO,SADO;AAEfC,EAAAA,QAAQ,EAAED,SAFK;AAGfN,EAAAA,WAAW,EAAE,qBAAUD,MAAV,EAAkB;AAC3B,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKQ,QAAL,GAAgBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAhB;AACH,GANc;AAOfR,EAAAA,IAAI,EAAE,gBAAY;AACd,QAAIS,CAAC,GAAG,KAAKX,MAAb;;AACA,KAAC,UAASY,KAAT,EAAgBD,CAAhB,EAAmB;AAChBE,MAAAA,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsC,UAAUX,CAAV,EAAa;AAC/CS,QAAAA,KAAK,CAACG,UAAN,CAAiBH,KAAjB,EAAwBD,CAAxB;AACH,OAFD;AAGH,KAJD,EAIG,IAJH,EAISA,CAJT;;AAKA,SAAKI,UAAL,CAAgB,IAAhB,EAAsBJ,CAAtB;AACH,GAfc;AAgBfI,EAAAA,UAAU,EAAE,oBAASH,KAAT,EAAgBD,CAAhB,EAAkB;AAC1B,QAAIE,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBC,MAArB,GAA8B,CAAlC,EAAqC;AACjC,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWD,MAAM,GAAGP,CAAC,CAACO,MAA3B,EAAmCC,CAAC,GAAGD,MAAvC,EAA+CC,CAAC,EAAhD,EAAoD;AAChD,YAAIC,KAAK,GAAGT,CAAC,CAACQ,CAAD,CAAb;;AACA,YAAGC,KAAK,CAACC,aAAN,CAAoBR,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBK,MAArB,CAA4B,CAA5B,CAApB,CAAH,EAAwD;AACpDV,UAAAA,KAAK,CAACW,SAAN,CAAgBH,KAAK,CAACI,QAAtB;AACH;AACJ;AACJ,KAPD,MAOO;AACH,WAAK,IAAIL,CAAC,GAAG,CAAR,EAAWD,MAAM,GAAGP,CAAC,CAACO,MAA3B,EAAmCC,CAAC,GAAGD,MAAvC,EAA+CC,CAAC,EAAhD,EAAoD;AAChD,YAAIC,KAAK,GAAGT,CAAC,CAACQ,CAAD,CAAb;;AACA,YAAGC,KAAK,WAAR,EAAkB;AACdR,UAAAA,KAAK,CAACW,SAAN,CAAgBH,KAAK,CAACI,QAAtB;AACH;AACJ;AACJ;AACJ,GAhCc;AAiCfD,EAAAA,SAAS,EAAE,mBAAUC,QAAV,EAAoB;AAC3B,KAAC,UAASZ,KAAT,EAAgB;AACb;AACA,UAAIa,GAAG,GAAG,wBAAV;AAAA,UACIC,KAAK,GAAG,IAAIC,cAAJ,EADZ;;AAEAD,MAAAA,KAAK,CAACE,kBAAN,GAA2B,YAAY;AACnC,YAAI,KAAKC,UAAL,KAAoB,CAApB,IAAyB,KAAKC,MAAL,KAAgB,GAA7C,EAAkD;AAC9ClB,UAAAA,KAAK,CAACJ,QAAN,CAAeuB,SAAf,GAA2B,KAAKC,YAAhC;AACH;AACJ,OAJD;;AAKAN,MAAAA,KAAK,CAACO,IAAN,CAAW,KAAX,EAAkBR,GAAlB,EAAuB,IAAvB;AACAC,MAAAA,KAAK,CAACQ,IAAN;AACH,KAXD,EAWG,IAXH;AAYH;AA9Cc,CAAnB","sourcesContent":["\n'use strict';\n\nfunction Router(routes) {\n    try {\n        if (!routes) {\n            throw 'error: routes param is mandatory';\n        }\n        this.constructor(routes);\n        this.init();\n    } catch (e) {\n        console.error(e);   \n    }\n}\n\nRouter.prototype = {\n    routes: undefined,\n    rootElem: undefined,\n    constructor: function (routes) {\n        this.routes = routes;\n        this.rootElem = document.getElementById('app');\n    },\n    init: function () {\n        var r = this.routes;\n        (function(scope, r) { \n            window.addEventListener('hashchange', function (e) {\n                scope.hasChanged(scope, r);\n            });\n        })(this, r);\n        this.hasChanged(this, r);\n    },\n    hasChanged: function(scope, r){\n        if (window.location.hash.length > 0) {\n            for (var i = 0, length = r.length; i < length; i++) {\n                var route = r[i];\n                if(route.isActiveRoute(window.location.hash.substr(1))) {\n                    scope.goToRoute(route.htmlName);\n                }\n            }\n        } else {\n            for (var i = 0, length = r.length; i < length; i++) {\n                var route = r[i];\n                if(route.default) {\n                    scope.goToRoute(route.htmlName);\n                }\n            }\n        }\n    },\n    goToRoute: function (htmlName) {\n        (function(scope) { \n            // console.log(\"funtion is called -----------------------------------\")\n            var url = 'http://127.0.0.1:3000/',\n                xhttp = new XMLHttpRequest();\n            xhttp.onreadystatechange = function () {\n                if (this.readyState === 4 && this.status === 200) {\n                    scope.rootElem.innerHTML = this.responseText;\n                }\n            };\n            xhttp.open('GET', url, true);\n            xhttp.send();\n        })(this);\n    }\n};"]},"metadata":{},"sourceType":"module"}