{"ast":null,"code":"'use stict';\n\nfunction Route(name, htmlName, defaultRoute) {\n  try {\n    if (!name || !htmlName) {\n      throw 'error: name and htmlName params are mandatories';\n    }\n\n    this.constructor(name, htmlName, defaultRoute);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nRoute.prototype = {\n  name: undefined,\n  htmlName: undefined,\n  \"default\": undefined,\n  constructor: function constructor(name, htmlName, defaultRoute) {\n    this.name = name;\n    this.htmlName = htmlName;\n    this[\"default\"] = defaultRoute;\n  },\n  isActiveRoute: function isActiveRoute(hashedPath) {\n    return hashedPath.replace('#', '') === this.name;\n  }\n};","map":{"version":3,"sources":["/home/yatharths/Desktop/Projects/InterviewNow/app/javascript/packs/js/route.js"],"names":["Route","name","htmlName","defaultRoute","constructor","e","console","error","prototype","undefined","isActiveRoute","hashedPath","replace"],"mappings":"AACA;;AAEA,SAASA,KAAT,CAAeC,IAAf,EAAqBC,QAArB,EAA+BC,YAA/B,EAA6C;AACzC,MAAI;AACA,QAAG,CAACF,IAAD,IAAS,CAACC,QAAb,EAAuB;AACnB,YAAM,iDAAN;AACH;;AACD,SAAKE,WAAL,CAAiBH,IAAjB,EAAuBC,QAAvB,EAAiCC,YAAjC;AACH,GALD,CAKE,OAAOE,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ;;AAEDL,KAAK,CAACQ,SAAN,GAAkB;AACdP,EAAAA,IAAI,EAAEQ,SADQ;AAEdP,EAAAA,QAAQ,EAAEO,SAFI;AAGd,aAASA,SAHK;AAIdL,EAAAA,WAAW,EAAE,qBAAUH,IAAV,EAAgBC,QAAhB,EAA0BC,YAA1B,EAAwC;AACjD,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,sBAAeC,YAAf;AACH,GARa;AASdO,EAAAA,aAAa,EAAE,uBAAUC,UAAV,EAAsB;AACjC,WAAOA,UAAU,CAACC,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,MAAgC,KAAKX,IAA5C;AACH;AAXa,CAAlB","sourcesContent":["\n'use stict';\n\nfunction Route(name, htmlName, defaultRoute) {\n    try {\n        if(!name || !htmlName) {\n            throw 'error: name and htmlName params are mandatories';\n        }\n        this.constructor(name, htmlName, defaultRoute);\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nRoute.prototype = {\n    name: undefined,\n    htmlName: undefined,\n    default: undefined,\n    constructor: function (name, htmlName, defaultRoute) {\n        this.name = name;\n        this.htmlName = htmlName;\n        this.default = defaultRoute;\n    },\n    isActiveRoute: function (hashedPath) {\n        return hashedPath.replace('#', '') === this.name; \n    }\n}"]},"metadata":{},"sourceType":"module"}